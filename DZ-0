'''
'''
import random
import time
import matplotlib.pyplot as plt

def bubble_sort(arr):
    n = len(arr)
    for i in range(n):
        for j in range(0, n-i-1):
            if arr[j] > arr[j+1]:
                arr[j], arr[j+1] = arr[j+1], arr[j]

def measure_time(size):
    # Создаем случайный массив заданного размера
    arr = [random.randint(0, 1000) for _ in range(size)]
    start_time = time.time()  # Запоминаем время начала
    bubble_sort(arr)          # Сортируем массив
    end_time = time.time()    # Запоминаем время окончания
    return end_time - start_time  # Возвращаем время выполнения

# Списки для хранения размеров массива и соответствующего времени
sizes = []
times = []

# Измеряем время выполнения для различных размеров массива
for size in range(1, 101):  # Измените диапазон по необходимости
    sizes.append(size)
    elapsed_time = measure_time(size)
    times.append(elapsed_time)

# Строим график
plt.plot(sizes, times, marker='o')
plt.title('Время выполнения пузырьковой сортировки')
plt.xlabel('Размер массива')
plt.ylabel('Время (сек.)')
plt.grid()
plt.show()
'''
import random
import time
import matplotlib.pyplot as plt

def quick_sort(arr):
    if len(arr) <= 1:
        return arr
    pivot = arr[len(arr) // 2]
    left = [x for x in arr if x < pivot]
    middle = [x for x in arr if x == pivot]
    right = [x for x in arr if x > pivot]
    return quick_sort(left) + middle + quick_sort(right)

def measure_time(size):
    # Создаем случайный массив заданного размера
    arr = [random.randint(0, 1000) for _ in range(size)]
    start_time = time.time()  # Запоминаем время начала
    quick_sort(arr)           # Сортируем массив
    end_time = time.time()    # Запоминаем время окончания
    return end_time - start_time  # Возвращаем время выполнения

# Списки для хранения размеров массива и соответствующего времени
sizes = []
times = []

# Измеряем время выполнения для различных размеров массива
for size in range(1, 101):  # Измените диапазон по необходимости
    sizes.append(size)
    elapsed_time = measure_time(size)
    times.append(elapsed_time)

# Строим график
plt.plot(sizes, times, marker='o')
plt.title('Время выполнения быстрой сортировки')
plt.xlabel('Размер массива')
plt.ylabel('Время (сек.)')
plt.grid()
plt.show()
'''
